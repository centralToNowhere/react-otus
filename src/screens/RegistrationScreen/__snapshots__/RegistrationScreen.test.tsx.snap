// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`Registration screen tests should render registration screen 1`] = `
<DocumentFragment>
  .emotion-0 {
  display: -webkit-box;
  display: -webkit-flex;
  display: -ms-flexbox;
  display: flex;
  -webkit-flex-direction: row;
  -ms-flex-direction: row;
  flex-direction: row;
}

.emotion-0 h1 {
  font-size: 2em;
  margin: 2em;
  display: block;
  line-height: 1.2em;
  -webkit-align-self: start;
  -ms-flex-item-align: start;
  align-self: start;
}

.emotion-0 h1.game-name {
  margin: 20px 0;
  -webkit-align-self: none;
  -ms-flex-item-align: none;
  align-self: none;
}

@media screen and (max-width: 992px) {
  .emotion-0 {
    -webkit-flex-direction: column-reverse;
    -ms-flex-direction: column-reverse;
    flex-direction: column-reverse;
  }
}

.emotion-2 {
  display: -webkit-box;
  display: -webkit-flex;
  display: -ms-flexbox;
  display: flex;
  -webkit-flex-direction: column;
  -ms-flex-direction: column;
  flex-direction: column;
  -webkit-align-items: center;
  -webkit-box-align: center;
  -ms-flex-align: center;
  align-items: center;
  min-height: 100vh;
  box-sizing: border-box;
  width: 50%;
}

@media screen and (max-width: 992px) {
  .emotion-2 {
    min-height: auto;
    width: 100%;
    height: auto;
  }
}

.emotion-4 {
  padding: 2em;
}

.emotion-4 li {
  font-size: 1.5rem;
  margin-bottom: 1em;
  list-style: disc;
}

.emotion-6 {
  display: -webkit-box;
  display: -webkit-flex;
  display: -ms-flexbox;
  display: flex;
  -webkit-flex-direction: column;
  -ms-flex-direction: column;
  flex-direction: column;
  -webkit-align-items: center;
  -webkit-box-align: center;
  -ms-flex-align: center;
  align-items: center;
  min-height: 100vh;
  box-sizing: border-box;
  width: 50%;
  -webkit-align-items: initial;
  -webkit-box-align: initial;
  -ms-flex-align: initial;
  align-items: initial;
  padding: 20px;
  background: #9083e6;
}

@media screen and (max-width: 992px) {
  .emotion-6 {
    min-height: auto;
    width: 100%;
    height: auto;
  }
}

.emotion-8 {
  height: 100vh;
  display: -webkit-box;
  display: -webkit-flex;
  display: -ms-flexbox;
  display: flex;
  -webkit-flex-direction: column;
  -ms-flex-direction: column;
  flex-direction: column;
  -webkit-box-pack: center;
  -ms-flex-pack: center;
  -webkit-justify-content: center;
  justify-content: center;
}

.emotion-8 form {
  background: #e8d5f0;
}

@media screen and (max-width: 992px) {
  .emotion-8 {
    -webkit-box-pack: justify;
    -webkit-justify-content: space-between;
    justify-content: space-between;
    height: auto;
  }
}

.emotion-10 {
  white-space: nowrap;
}

.emotion-11 {
  margin: 20px;
  display: -webkit-box;
  display: -webkit-flex;
  display: -ms-flexbox;
  display: flex;
  -webkit-flex-direction: column;
  -ms-flex-direction: column;
  flex-direction: column;
  border: 2px solid black;
  border-radius: 10px;
  width: 70%;
  max-width: 600px;
  -webkit-flex-direction: row;
  -ms-flex-direction: row;
  flex-direction: row;
  margin: 20px 0;
}

.emotion-11 input,
.emotion-11 label,
.emotion-11 button,
.emotion-11 p {
  line-height: 1.2;
}

@media screen and (max-width: 480px) {
  .emotion-11 {
    width: 100%;
    -webkit-flex-direction: column-reverse;
    -ms-flex-direction: column-reverse;
    flex-direction: column-reverse;
  }
}

.emotion-13 {
  display: -webkit-inline-box;
  display: -webkit-inline-flex;
  display: -ms-inline-flexbox;
  display: inline-flex;
  -webkit-flex-direction: column;
  -ms-flex-direction: column;
  flex-direction: column;
  -webkit-flex: 0 0 calc(100% / 3 - 40px);
  -ms-flex: 0 0 calc(100% / 3 - 40px);
  flex: 0 0 calc(100% / 3 - 40px);
  margin: 20px;
  -webkit-box-pack: end;
  -ms-flex-pack: end;
  -webkit-justify-content: end;
  justify-content: end;
  display: -webkit-box;
  display: -webkit-flex;
  display: -ms-flexbox;
  display: flex;
  -webkit-box-flex: 10;
  -webkit-flex-grow: 10;
  -ms-flex-positive: 10;
  flex-grow: 10;
}

.emotion-13 input,
.emotion-13 button {
  margin: 5px 0 0 0;
  min-width: 100px;
}

.emotion-13 div.error-container {
  position: relative;
}

.emotion-13 p.error-msg {
  position: absolute;
  line-height: 1em;
  font-size: 1em;
  color: red;
}

.emotion-15 {
  margin-bottom: 20px;
}

.emotion-16 {
  display: inline;
}

.emotion-18 {
  background: inherit;
  border-top: 0;
  border-left: 0;
  border-right: 0;
  display: block;
  outline: 0;
  width: 100px;
  width: 100%;
}

.emotion-18:focus {
  border-bottom: 2px solid #ff215c;
}

.emotion-20 {
  background: inherit;
  margin: 20px auto;
  margin-right: auto!important;
}

.emotion-20:focus {
  outline: 2px solid #ff215c!important;
  border: 2px solid transparent;
}

.emotion-22 {
  -webkit-box-flex: 1;
  -webkit-flex-grow: 1;
  -ms-flex-positive: 1;
  flex-grow: 1;
  text-align: right;
}

@media screen and (max-width: 480px) {
  .emotion-22 {
    text-align: left;
  }
}

.emotion-24 {
  color: #ff215c;
  visibility: hidden;
  margin: 20px 20px 0 20px;
}

@media screen and (max-width: 480px) {
  .emotion-24 {
    display: none;
  }
}

<div
    class="emotion-0 emotion-1"
  >
    <div
      class="emotion-2 emotion-3"
    >
      <article>
        <h1>
          Правила
        </h1>
        <div
          class="emotion-4 emotion-5"
        >
          <ul>
            <li>
              Место действия этой игры — «вселенная» — это размеченная на клетки поверхность или плоскость — безграничная, ограниченная, или замкнутая (в пределе — бесконечная плоскость).
            </li>
            <li>
              Каждая клетка на этой поверхности может находиться в двух состояниях: быть «живой» (заполненной) или быть «мёртвой» (пустой). Клетка имеет восемь соседей, окружающих её.
            </li>
            <li>
              Распределение живых клеток в начале игры называется первым поколением. Каждое следующее поколение рассчитывается на основе предыдущего по таким правилам:
            </li>
            <ul>
              <li>
                в пустой (мёртвой) клетке, рядом с которой ровно три живые клетки, зарождается жизнь
              </li>
              <li>
                если у живой клетки есть две или три живые соседки, то эта клетка продолжает жить; в противном случае, если соседей меньше двух или больше трёх, клетка умирает («от одиночества» или «от перенаселённости»)
              </li>
            </ul>
            <li>
              Игра прекращается, если:
            </li>
            <ul>
              <li>
                на поле не останется ни одной «живой» клетки
              </li>
              <li>
                конфигурация на очередном шаге в точности (без сдвигов и поворотов) повторит себя же на одном из более ранних шагов (складывается периодическая конфигурация)
              </li>
              <li>
                при очередном шаге ни одна из клеток не меняет своего состояния (складывается стабильная конфигурация; предыдущее правило, вырожденное до одного шага назад)
              </li>
            </ul>
          </ul>
        </div>
      </article>
    </div>
    <div
      class="emotion-6 emotion-7"
    >
      <div
        class="emotion-8 emotion-9"
      >
        <h1
          class="game-name"
        >
          Conway's 
          <span
            class="emotion-10"
          >
            Game of Life
          </span>
        </h1>
        <form
          class="emotion-11 emotion-12"
        >
          <div
            class="emotion-13 emotion-14"
          >
            <div
              class="emotion-15"
            >
              <label
                class="emotion-16 emotion-17"
                for="register-player-input"
              >
                Введите имя игрока
              </label>
              <input
                class="emotion-18 emotion-19"
                id="register-player-input"
                name="playerName"
                value="Player23"
              />
            </div>
            <button
              class="emotion-20 emotion-21"
              name="startGameAsPlayer"
              type="button"
            >
              Начать игру
            </button>
          </div>
          <div
            class="emotion-22 emotion-23"
          >
            <div
              class="emotion-24 spinner-border"
              role="status"
            />
          </div>
        </form>
      </div>
    </div>
  </div>
</DocumentFragment>
`;
