name: react-otus workflow
on:
  push:
    branches: [ lesson* ]
  #  pull_request:
  #    branches: [ master ]

  # Allows you to run this workflow manually from the Actions tab
  workflow_dispatch:

# A workflow run is made up of one or more jobs that can run sequentially or in parallel
jobs:
  test:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2
        with:
          fetch-depth: 0 # ðŸ‘ˆ Required to retrieve git history

      - uses: actions/setup-node@v2
        with:
          node-version: '16'

      - name: Cache NPM dependencies
        uses: actions/cache@v2.1.7
        id: cache
        with:
          path: ~/.npm
          key: ${{ runner.OS }}-npm-cache-${{ hashFiles('**/package-lock.json') }}
          restore-keys: |
            ${{ runner.OS }}-npm-cache-

      - name: Install dependencies
        if: steps.cache.outputs.cache-hit != 'true'
        run: npm ci

      - name: Check typing
        run: npm run types

      - name: Run tests
        run: npm run test

      - name: Check codestyle
        run: npm run lint

      - name: Run visual regression tests
        run: npm run loki:test

  build-deploy:
    needs: test
    runs-on: ubuntu-latest
    steps:
      # Checks-out your repository under $GITHUB_WORKSPACE, so your job can access it
      - uses: actions/checkout@v2
        with:
          fetch-depth: 0 # ðŸ‘ˆ Required to retrieve git history
      - uses: actions/setup-node@v2
        with:
          node-version: '16'

      - name: Restore NPM dependencies
        uses: actions/cache@v2.1.7
        id: cache
        with:
          path: ~/.npm
          key: ${{ runner.OS }}-npm-cache-${{ hashFiles('**/package-lock.json') }}
          restore-keys: |
            ${{ runner.OS }}-npm-cache-

      - name: Install dependencies
        if: steps.cache.outputs.cache-hit != 'true'
        run: npm ci

      - name: Pre-build
        run: |
          echo 'export const basename = "/react-otus";' > src/routes/basename.ts

      - name: Build
        run: npm run build

      - name: Pre-deploy
        run: |
          cp dist/index.html dist/404.html

      - name: Deploy ðŸš€
        id: Deploy
        uses: JamesIves/github-pages-deploy-action@3.7.1
        with:
          GITHUB_TOKEN: ${{ secrets.GH_TOKEN }}
          BRANCH: gh-pages # The branch the action should deploy to.
          FOLDER: dist # The folder the action should deploy.
          CLEAN: true # Automatically remove deleted files from the deploy branch